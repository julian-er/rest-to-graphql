type Query {
  SeasonsList: [Season!]!
  RacesByYear(year:String!):[Race!]!
}

# JSON to TS (JSON to ts.com) to obtain the schema of a JSON object in API
# interface Season {
#     season: string;
#     url: string;
# }
#Convert to schema graphQL

"Seasons info, obtain from API REST"
type Season {
  "Year is equal 'season' in API REST"
  year: String!
  url: String!
  urlMobile: String!
}

# JSON to TS (JSON to ts.com) to obtain the schema of a JSON object in API
# interface Race {
#     season: string;
#     round:string;
#     url:string;
#     raceName:string;
#     Circuit: Circuit;
#     date:string;
#     time:string;
# }
#
# interface Circuit{
#     circuitId:string;
#     url:string;
#     circuitName:string;
#     Location: Location;
# }
#
# interface Location {
#     lat: string;
#     long:string;
#     locality:string;
#     country:string;
# }
#Convert to schema graphQL

"Race info, obtain from API REST"
type Race {
    season: String!
    round:String!
    url:String!
    "name is equal to raceName in API REST"
    name:String! 
    "circuit is equal to Circuit in API REST"
    circuit: Circuit!
    date:String!
    time:String!
}
"Circuit info, obtain from API REST"
type Circuit{
    "id is equal to ciruitId in API REST"
    id:String!
    url:String!
    "name is equal to circuitName in API REST"
    name:String!
    "location is equal to Location in API REST"
    location: Location!
}
"Race Location, obtain from API REST"
type Location {
    lat: String!
    long:String!
    locality:String!
    country:String!
}